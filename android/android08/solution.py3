## Note: The problem said to concat the key from the server and pin.
## That said, I do not see it in the code.
## Need to come back later to review .java code and see if I can read what is going on (concatenating key+pin = hashed_key)


import base64
import hashlib

import itertools

import Crypto
import Crypto.Random
from Crypto.Cipher import AES


def unpad_data(data):
    if not data:
        return data

    data = data.rstrip(b'\x00')
    if data[-1] == 128: # b'\x80'[0]:
        return data[:-1]
    else:
        return data

def decrypt(key, iv, data):
    # print(b"key: " + key)
    # print(b"iv: " + iv)
    # print(b"data: " + data)

    aes = AES.new(key, AES.MODE_CBC, iv)
    data = aes.decrypt(data)
    return unpad_data(data)



def do(pin):
  paramString = "G38zckAufW4B9A6sywz28kzgW8CCx1UWugLUTjKlo/kwV1CVesmr0tPX/JZOW0aik0TlkrcAIZZ/G0BigUtmeg=="
  key = b'<=== P3nt3st3rL4b ===>'
  key += bytes(pin, "utf-8")
  # print(key)
  # key = "2131165266"

  decoded_data = base64.urlsafe_b64decode(paramString)
  iv = decoded_data[:16]
  i = len(decoded_data) - 16
  # print(i)
  data_to_decode = decoded_data[16:]
  # print(decoded_data)

  m = hashlib.md5()
  m.update(key)
  key = m.digest()

  # -------------------

  decrypted = decrypt(key, iv, data_to_decode)
  # if (decrypted[8] == b'-' and decrypted[13] == b'-' and decrypted[18] == b'-' and decrypted[23] == b'-'):
  if(decrypted.count(b'-') >= 4):
    print(pin)
    print(decrypted.rstrip(b'\x0c'))




for a in range(0,10):
  for b in range(0,10):
    for c in range(0,10):
      for d in range(0,10):
        do(str(a)+str(b)+str(c)+str(d))


