package com.pentesterlab.android08;

import android.os.AsyncTask;
import android.util.Base64;
import android.util.Log;
import android.widget.Toast;
import java.security.MessageDigest;
import java.util.ArrayList;
import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;
import org.json.JSONException;
import org.json.JSONObject;

public class a extends AsyncTask<String[], Void, ArrayList<String[]>> {
  MessageActivity a;
  
  int b = 0;
  
  String c;
  
  String d;
  
  private ArrayList<String[]> e = new ArrayList();
  
  public a(MessageActivity paramMessageActivity) { this.a = paramMessageActivity; }
  
  public static String a(String paramString1, String paramString2, String paramString3) {
    try {
      StringBuilder stringBuilder = new StringBuilder();
      this();
      stringBuilder.append("pin+");
      stringBuilder.append(paramString2);
      Log.wtf("PTLAB", stringBuilder.toString());
      stringBuilder = new StringBuilder();
      this();
      stringBuilder.append("key");
      stringBuilder.append(paramString3);
      Log.wtf("PTLAB", stringBuilder.toString());
      stringBuilder = new StringBuilder();
      this();
      stringBuilder.append("in");
      stringBuilder.append(paramString1);
      Log.wtf("PTLAB", stringBuilder.toString());
      byte[] arrayOfByte3 = Base64.decode(paramString1, 0);
      byte[] arrayOfByte1 = new byte[arrayOfByte3.length];
      byte[] arrayOfByte4 = new byte[16];
      byte[] arrayOfByte2 = new byte[16];
      System.arraycopy(arrayOfByte3, 0, arrayOfByte4, 0, arrayOfByte4.length);
      IvParameterSpec ivParameterSpec = new IvParameterSpec();
      this(arrayOfByte4);
      int i = arrayOfByte3.length - 16;
      arrayOfByte4 = new byte[i];
      System.arraycopy(arrayOfByte3, 16, arrayOfByte4, 0, i);
      MessageDigest messageDigest = MessageDigest.getInstance("MD5");
      messageDigest.update(paramString3.getBytes("UTF-8"));
      messageDigest.update(paramString2.getBytes("UTF-8"));
      System.arraycopy(messageDigest.digest(), 0, arrayOfByte2, 0, arrayOfByte2.length);
      SecretKeySpec secretKeySpec = new SecretKeySpec();
      this(arrayOfByte2, "AES");
      Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
      cipher.init(2, secretKeySpec, ivParameterSpec);
      return new String(cipher.doFinal(arrayOfByte4));
    } catch (Exception paramString1) {
      Log.wtf("PTLAB", paramString1.toString());
      return "";
    } 
  }
  
  protected ArrayList<String[]> a(String[]... paramVarArgs) {
    str2 = "";
    String str3 = str2;
    try {
      DefaultHttpClient defaultHttpClient = new DefaultHttpClient();
      str3 = str2;
      this();
      str3 = str2;
      HttpGet httpGet = new HttpGet();
      str3 = str2;
      this("https://pentesterlab.com/android08/keys.json");
      str3 = str2;
      httpResponse = defaultHttpClient.execute(httpGet);
      str3 = str2;
      this.b = httpResponse.getStatusLine().getStatusCode();
      str3 = str2;
      HttpEntity httpEntity = httpResponse.getEntity();
      str3 = str2;
      String str = EntityUtils.toString(httpEntity);
      str3 = str2;
      try {
        Log.wtf("PTLAB", str);
        str3 = str2;
        JSONObject jSONObject = new JSONObject();
        str3 = str2;
        this(str);
        str3 = str2;
        String str4 = jSONObject.getString("key");
        str2 = str4;
      } catch (JSONException httpResponse) {
        str3 = str2;
        Log.wtf("PTLAB", httpResponse.toString());
        str2 = "";
      } 
      str3 = str2;
      if (httpEntity != null) {
        str3 = str2;
        Log.i("RESPONSE", str);
        str3 = str2;
      } 
    } catch (Exception str2) {
      this.d = str2.getMessage();
      this.c = str2.getClass().getSimpleName();
    } 
    Log.wtf("PTLAB", paramVarArgs[0][1]);
    str2 = paramVarArgs[0][0];
    String str1 = paramVarArgs[0][1];
    this.e.add(new String[] { str3, str2, str1 });
    return this.e;
  }
  
  protected void a(ArrayList<String[]> paramArrayList) {
    super.onPostExecute(paramArrayList);
    String[] arrayOfString = (String[])paramArrayList.get(0);
    Log.wtf("PTLAB", arrayOfString.toString());
    String str = arrayOfString[0];
    str = a(arrayOfString[1], arrayOfString[2], str);
    Log.wtf("PTLAB", str);
    MessageActivity messageActivity = this.a;
    StringBuilder stringBuilder = new StringBuilder();
    stringBuilder.append("The key is: \n");
    stringBuilder.append(str);
    messageActivity.a(stringBuilder.toString());
    if (this.b == 403)
      Toast.makeText(this.a, "Error : Seems like the pin you entered was invalid", 1).show(); 
  }
}
